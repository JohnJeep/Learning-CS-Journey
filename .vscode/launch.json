{
    "version": "0.2.0",
    "configurations": [
        // C++ 单文件debug配置
        {
            "name": "(gdb) Launch",                                                         // 配置名称，将会在启动配置的下拉菜单中显示 
            "type": "cppdbg",                                                               // 配置类型，这里只能为cppdbg
            "request": "launch",                                                            // 请求配置类型，可以为launch（启动）或attach（附加）
            "targetArchitecture": "x64",                                                    // 生成目标架构，一般为x86或x64
            "program": "${fileDirname}/${fileBasenameNoExtension}.exe",                     // 将要进行调试的程序的路径
            "args": [],                                                                     // 程序调试时传递给程序的命令行参数，一般设为空即可
            "stopAtEntry": false,                                                           // 设为true时程序将暂停在程序入口处，一般设置为false
            "cwd": "${workspaceFolder}",                                                    // 设置调试器启动的应用程序的工作目录，一般为${workspaceFolder}即代码所在目录
            "environment": [],                                                              // 设置调试时添加到程序环境中的环境变量，例如: [ { "name": "squid", "value": "clam" } ]。自定义 GDB 或者 LLDB
            "externalConsole": true,                                                        // 为true时使用单独的cmd窗口，与其它IDE一致；18年10月后设为false可调用VSC内置终端
            "internalConsoleOptions": "neverOpen",                                          // 如果不设为neverOpen，调试时会跳到“调试控制台”选项卡，你应该不需要对gdb手动输命令吧？
            "MIMode": "gdb",                                                                // 指定 VS Code 连接的调试器，必须为 gdb 或者 lldb
            "miDebuggerPath": "D:/mingw64/bin/gdb.exe",                       //miDebuggerPath为调试器MinGw中gdb.exe的路径，Windows下后缀不能省略，Linux下则不要
            "preLaunchTask": "Compile C++",	                                                        // 调试会话开始前执行的任务，一般为编译程序。与tasks.json中label的名称一致
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
    ]
}